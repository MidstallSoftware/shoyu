#pragma once

#if !defined (__SHOYU_SHELL_GTK_H_INSIDE__) && !defined (SHOYU_SHELL_GTK_COMPILATION)
#error "Only <shoyu-shell-gtk4/shoyu-shell-gtk4.h> can be included directly."
#endif

#include <glib.h>
#include <shoyu-shell-gtk4/version/versionmacros.h>

G_BEGIN_DECLS

/**
 * SHOYU_SHELL_GTK_MAJOR_VERSION:
 *
 * Like [func@get_major_version], but from the headers used at
 * application compile time, rather than from the library linked
 * against at application run time.
 */
#define SHOYU_SHELL_GTK_MAJOR_VERSION (@SHOYU_SHELL_GTK_MAJOR_VERSION@)

/**
 * SHOYU_SHELL_GTK_MINOR_VERSION:
 *
 * Like [func@get_minor_version], but from the headers used at
 * application compile time, rather than from the library linked
 * against at application run time.
 */
#define SHOYU_SHELL_GTK_MINOR_VERSION (@SHOYU_SHELL_GTK_MINOR_VERSION@)

/**
 * SHOYU_SHELL_GTK_MICRO_VERSION:
 *
 * Like [func@get_micro_version], but from the headers used at
 * application compile time, rather than from the library linked
 * against at application run time.
 */
#define SHOYU_SHELL_GTK_MICRO_VERSION (@SHOYU_SHELL_GTK_MICRO_VERSION@)

/**
 * SHOYU_SHELL_GTK_BINARY_AGE:
 *
 * Like [func@get_binary_age], but from the headers used at
 * application compile time, rather than from the library linked
 * against at application run time.
 */
#define SHOYU_SHELL_GTK_BINARY_AGE    (@SHOYU_SHELL_GTK_BINARY_AGE@)

/**
 * SHOYU_SHELL_GTK_INTERFACE_AGE:
 *
 * Like [func@get_interface_age], but from the headers used at
 * application compile time, rather than from the library linked
 * against at application run time.
 */
#define SHOYU_SHELL_GTK_INTERFACE_AGE (@SHOYU_SHELL_GTK_INTERFACE_AGE@)

/**
 * SHOYU_SHELL_GTK_CHECK_VERSION:
 * @major: major version (e.g. 1 for version 1.2.5)
 * @minor: minor version (e.g. 2 for version 1.2.5)
 * @micro: micro version (e.g. 5 for version 1.2.5)
 *
 * Returns %TRUE if the version of the SHOYU_SHELL_GTK header files
 * is the same as or newer than the passed-in version.
 *
 * Returns: %TRUE if SHOYU_SHELL_GTK headers are new enough
 */
#define SHOYU_SHELL_GTK_CHECK_VERSION(major,minor,micro)                          \
    (SHOYU_SHELL_GTK_MAJOR_VERSION > (major) ||                                   \
     (SHOYU_SHELL_GTK_MAJOR_VERSION == (major) && SHOYU_SHELL_GTK_MINOR_VERSION > (minor)) || \
     (SHOYU_SHELL_GTK_MAJOR_VERSION == (major) && SHOYU_SHELL_GTK_MINOR_VERSION == (minor) && \
      SHOYU_SHELL_GTK_MICRO_VERSION >= (micro)))

SHOYU_SHELL_GTK_AVAILABLE_IN_ALL
guint shoyu_shell_gtk_get_major_version(void) G_GNUC_CONST;
SHOYU_SHELL_GTK_AVAILABLE_IN_ALL
guint shoyu_shell_gtk_get_minor_version(void) G_GNUC_CONST;
SHOYU_SHELL_GTK_AVAILABLE_IN_ALL
guint shoyu_shell_gtk_get_micro_version(void) G_GNUC_CONST;
SHOYU_SHELL_GTK_AVAILABLE_IN_ALL
guint shoyu_shell_gtk_get_binary_age(void) G_GNUC_CONST;
SHOYU_SHELL_GTK_AVAILABLE_IN_ALL
guint shoyu_shell_gtk_get_interface_age(void) G_GNUC_CONST;

SHOYU_SHELL_GTK_AVAILABLE_IN_ALL
const char* shoyu_shell_gtk_check_version (guint required_major, guint required_minor, guint required_micro);

G_END_DECLS
